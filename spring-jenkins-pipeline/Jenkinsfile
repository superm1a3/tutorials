pipeline {

    agent any

    environment {
        def pom = readMavenPom()
        def abc = 2
    }

    stages {
        stage("Compilation") {
            steps {
                dir('spring-jenkins-pipeline') {
                    script {
                        echo "env = $env"
                        echo "abc = ${abc}"
                        echo "This is the groupId: ${env.pom.groupId}"
                        if (isUnix()) {
                            sh "./mvnw clean install -DskipTests"
                        } else {
                            bat "./mvnw.cmd clean install -DskipTests"
                        }
                    }
                }
            }
        }

        stage("Running unit tests") {
            steps {
                dir('spring-jenkins-pipeline') {
                    script {
                        try {
                            if (isUnix()) {
                                sh "./mvnw test -Punit"
                            } else {
                                bat "./mvnw.cmd test -Punit"
                            }
                        } catch (err) {
                            step([$class: 'JUnitResultArchiver', testResults: '**/target/surefire-reports/TEST-*UnitTest.xml'])
                            throw err
                        }
                        junit '**/target/surefire-reports/TEST-*UnitTest.xml'
                    }
                }
            }
        }
    }
}