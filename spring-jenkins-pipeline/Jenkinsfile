node {
//    stage 'Clone the project'
//    git 'https://github.com/superm1a3/tutorials.git'

    dir('spring-jenkins-pipeline') {
        stage("Compilation and Analysis") {
            parallel 'Compilation': {
                if (isUnix()) {
                    sh "./mvnw clean install -DskipTests"
                } else {
                    bat "./mvnw.cmd clean install -DskipTests"
                }
            }, 'Static Analysis': {
                stage("Checkstyle") {
                    if (isUnix()) {
                        sh "./mvnw checkstyle:checkstyle"
                    } else {
                        bat "./mvnw.cmd checkstyle:checkstyle"
                    }
                     step([$class: 'CheckStylePublisher',
                          canRunOnFailed: true,
                          defaultEncoding: '',
                          healthy: '100',
                          pattern: '**/target/checkstyle-result.xml',
                          unHealthy: '90',
                          useStableBuildAsReference: true
                        ])
                }
            }
        }

        stage("Tests and Deployment") {
                stage("Running unit tests") {
                    try {
                        if (isUnix()) {
                            sh "./mvnw test -Punit"
                        } else {
                            bat "./mvnw.cmd test -Punit"
                        }
                    } catch(err) {
                        step([$class: 'JUnitResultArchiver', testResults: '**/target/surefire-reports/TEST-*UnitTest.xml'])
                        throw err
                    }
                    //step([$class: 'JUnitResultArchiver', testResults: '**/target/surefire-reports/TEST-*UnitTest.xml'])
                    junit '**/target/surefire-reports/TEST-*UnitTest.xml'
                }

            // stage("Staging") {
            //     withEnv(['JENKINS_NODE_COOKIE=dontkill']) {
            //         if (isUnix()) {
            //             sh 'nohup ./mvnw spring-boot:run -Dserver.port=8989 &'
            //         } else {
            //             bat 'start ./mvnw.cmd spring-boot:run -Dserver.port=8989'
            //         }
            //     }
            // }
        }
    }
}